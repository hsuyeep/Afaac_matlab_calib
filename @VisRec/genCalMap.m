% Function to generate a calibrated map from the observed
% visibilities. Returns generated images in the img structure
% Both XX and YY images are returned.
%
% Arguments:
%   arrayconfig : One of 'lba_outer', 'lba_inner'
%   flagant     : Index of antennas to be flagged.
% Returns:
%   img : structure containing generated images.
%   sol : Solution structure as generated by the calibration routine.
function [img, solx, soly] = genCalMap (obj, arrayconfig, flagant)
    load ('poslocal_outer.mat', 'poslocal');
    uloc = meshgrid (poslocal(:,1)) - meshgrid (poslocal (:,1)).';
    vloc = meshgrid (poslocal(:,2)) - meshgrid (poslocal (:,2)).';
    wloc = meshgrid (poslocal(:,3)) - meshgrid (poslocal (:,3)).';
	gparm.type = 'pillbox';
    gparm.lim  = 0;
    gparm.duv = 0.5;				% Default, reassigned from freq. of obs. to
									% image just the full Fov (-1<l<1)
    gparm.Nuv = 512;				% size of gridded visibility matrix
    gparm.uvpad = 512;				% specifies if any padding needs to be added
    gparm.fft  = 1;

    img.tobs = obj.trecstart;
    img.freq = obj.freq;


    solx = pelican_sunAteamsub (obj.acm_xx, img.tobs, img.freq, eye(obj.nelem), ... 
		flagant, obj.deb, 1, [], [], 'poslocal_outer.mat', [], []);
    soly = pelican_sunAteamsub (obj.acm_yy, img.tobs, img.freq, eye(obj.nelem), ... 
		flagant, obj.deb, 1, [], [], 'poslocal_outer.mat', [], []);

    [uloc_flag, vloc_flag, ~] = gen_flagged_uvloc (uloc, vloc, wloc, flagant);
    [~, img.map_xx, ~, img.l, img.m] = ... 
        fft_imager_sjw_radec (solx.calvis(:), uloc_flag(:), vloc_flag(:), ... 
			gparm, [], [], img.tobs, img.freq, 0);
    [~, img.map_yy, ~, img.l, img.m] = ... 
        fft_imager_sjw_radec (soly.calvis(:), uloc_flag(:), vloc_flag(:), ... 
			gparm, [], [], img.tobs, img.freq, 0);
end;
