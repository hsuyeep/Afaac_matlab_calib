#!/usr/bin/python
''' Program to read a .bin file as generated by readms2float.py
'''

import traceback
import numpy;
import os;
import sys;
import struct;


def main ():
	if (len(sys.argv) < 2):
		print 'Usage:', sys.argv[0], 'file.bin';
		sys.exit(-1);

	binfile = sys.argv[1];
	nelem = 288;
	nbl = nelem*(nelem+1)/2;
	recsize = 8*(2+nbl); # rec size in bytes.

	siz = os.stat (binfile).st_size;
	nrec = siz/recsize;
	print 'File: ', binfile, '\nSize: ', siz, 'Bytes. Records: ', nrec;

	fbin = open (binfile, 'rb');
	# tim = zeros (nrec, 'd');
	# freq = zeros (nrec, 'd');
	tim = 0; freq = 0;
	# acc = numpy.zeros (nelem, nelem, 'd');

	for i in range (0, nrec):
		rec = fbin.read (recsize);	
		tim = struct.unpack ('d', rec[0:8]);   # Returns a tuple
		freq = struct.unpack ('d', rec[8:16]); # Returns a tuple
		print 'Time: %10.1f, Freq: %9.1f'%(tim[0],freq[0]);
		# acc
	

	fbin.close ();

if __name__ == "__main__":
	main();

	


