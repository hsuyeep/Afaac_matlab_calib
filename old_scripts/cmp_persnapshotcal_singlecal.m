% Program to estimate calibration solutions from a single 'good'
% snapshot, and to apply the set of solutions to the entire 3Hr AARTFAAC 
% Superterp timeseries.
% The differences between images generated in this fashion, and with images
% generated with the calibration solutions estimated much more periodically
% (every 10 mins) is presented as difference images, and as a histogram for
% every generated spatial direction, in order to check for systematics.
% Saves per snapshot variables as .mat files in the local directory.
% pep/06Feb12

% NOTE: We use the outputs generated by aartfaac_demo_25Jan12.m, which makes
% per-snapshot calibration solutions available in the form of matlab
% variables.

% Load up the calibration solutions from a single 'good' snapshot
load '../cookdat/per_snapshot_cal_sol/SB000_115908_sterp_clean_var.mat';
single_cal1 = cal1; single_cal2 = cal2;
load 'poslocal.mat';
load '../cookdat/sky_cal2_images.mat';

%% Load up the uncalibrated visibilities for every snapshot  
% Name of directory holding snapshot data matrices
dirname = '../cookdat/sterp_tseries/';
% [~, lsout] = dos(['ls -1 ' dirname '*clean.txt']);
[~, lsout] = dos(['ls -1 ' dirname '*clean.mat']);

datafiles = textscan(lsout, '%s\n');
nfiles = length(datafiles{1});
Nelem = 288; % NOTE Hardcoded
imgdiff = zeros (length(l), length(m), nfiles);
skymap_single_cal = imgdiff;

% Operate on all timeslices
for fnum = 1:1 % nfiles
    
    % read in the cross correlation matrix, while saving it as a .mat file
    disp(['Processing file number ' num2str(fnum) ' of ' num2str(nfiles) ' (' datafiles{1}{fnum} ')']);
    datestr (now)
    %acm = fill_acm_sterp (datafiles {1}{file}, 288);
    % Extract out the timestamp of the observation and load cross correlation
    % matrix
    ccm_fname = datafiles {1}{fnum};
    load (ccm_fname);

    [tok ccm_fname] = strtok (ccm_fname, '/');
    a = size (ccm_fname);
    while a(2) ~= 0
        [tok ccm_fname] = strtok (ccm_fname, '/');
        a = size (ccm_fname);
    end
    
    f_tobs = sscanf (tok, 'SB000_%2d%2d%2d')

    % the array covariance matrix is stored in upper triangular form, so we
    % complete it
    acc = acm + acm' - diag(diag(acm));
    Nelem = size(acc, 1);

    % Apply the single calibration on every snapshot, treat noise in a per
    % snapshot basis
    acccal = (single_cal2' * single_cal2) .* (acc - squeeze(Sigman2));
    
    % Generate image from the calibrated visibilities
    disp ('Generating image from calibrated visibilties');
    skymap_single_cal (:,:,fnum) = acm2skyimage(acccal, poslocal(:, 1), poslocal(:, 2), freq, l, m);

    % Generate image differences between images generated via snapshot
    % calibration, and those via single calibration
    disp (['Generating image difference and statistics.']);
    imgdiff (:,:,fnum) = sky_cal2 (:,:,fnum) - skymap_single_cal (:,:,fnum);
    
    % Generate per-pixel histograms
end

% Save images and their differences to file
save ('cmp_persnapshotcal_singlecal_img_diffs.mat', 'skymap_single_cal', 'imgdiff');
